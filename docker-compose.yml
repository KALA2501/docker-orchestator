
services:
  discovery-service:
    build:
      context: https://github.com/KALA2501/EurekaServer
    container_name: discovery-service
    ports:
      - "8761:8761"
    networks:
      - kala-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      retries: 3

  config-server:
    build:
      context: https://github.com/KALA2501/GatewayServer
    container_name: config-server
    ports:
      - "8888:8888"
    depends_on:
      - discovery-service  # Config Server depende de Discovery Service
    networks:
      - kala-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      retries: 3

  api-gateway:
    build:
      context: https://github.com/KALA2501/GatewayServer
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - config-server
      - discovery-service  # API Gateway depende de ambos Discovery Service y Config Server
    networks:
      - kala-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      retries: 3

  usuarios-service:
    build:
      context: https://github.com/KALA2501/MicroservicioUsuarios
    container_name: usuarios-service
    ports:
      - "9091:9091"
    depends_on:
      - config-server
      - discovery-service  # Usuarios Service depende de Discovery Service y Config Server
    networks:
      - kala-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/actuator/health"]
      interval: 30s
      retries: 3

  frontend:
    build:
      context: https://github.com/KALA2501/kala-frontend  # El path de tu Dockerfile para el frontend React
    container_name: frontend
    ports:
      - "3000:3000"  # Mapeo del puerto del contenedor al puerto 3000 en el host
    depends_on:
      - api-gateway
      - discovery-service
      - config-server  # El frontend depende de los tres
    networks:
      - kala-network
    restart: always
    environment:
      - REACT_APP_API_URL=http://api-gateway:8080  # Configura la URL de la API para React
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      retries: 3

networks:
  kala-network:
    driver: bridge
