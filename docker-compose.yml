services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    networks:
      - kala-network
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: kala
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql      
      - ./mysql-init/kala.sql:/docker-entrypoint-initdb.d/kala.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-padmin"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  discovery-service:
    build:
      context: ./discovery-service
    container_name: discovery-service
    ports:
      - "8761:8761"
    networks:
      - kala-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      retries: 5
      start_period: 20s

  config-server:
    build:
      context: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    depends_on:
      discovery-service:
        condition: service_healthy
    networks:
      - kala-network
    environment:
      - SPRING_PROFILES_ACTIVE=git
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/KALA2501/Archivos-config.git
      - SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL=main
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 60s

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    networks:
      - kala-network
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      retries: 5
      start_period: 30s

  usuarios-service:
    build:
      context: ./usuarios-service
    container_name: usuarios-service
    ports:
      - "9091:9091"
    depends_on:
      mysql:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
    networks:
      - kala-network
    environment:
      - SPRING_APPLICATION_NAME=usuarios-service
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/kala
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=admin
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
      - discovery-service
      - config-server
      - mysql
      - usuarios-service
    networks:
      - kala-network
    restart: always
    environment:
      - REACT_APP_API_URL=http://api-gateway:8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      retries: 3

  zookeeper:
    image: zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kala-network
    restart: always

  kafka:
    build:
      context: ./kafka
      # No need to specify `dockerfile:` if the name is just "Dockerfile"
    container_name: kafka
    depends_on:
      - zookeeper
    networks:
      - kala-network
    ports:
      - "8088:8088"
      - "8089:8089"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:8088,PRODUCER://host.docker.internal:8089
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:8088,PRODUCER://0.0.0.0:8089
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PRODUCER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    restart: always


  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    ports:
      - "9090:9090"
    networks:
      - kala-network
    environment:
      - GMAIL_USER=kala.prototipo@gmail.com
      - GMAIL_PASS=wyuc rerk twhy ohhf
    restart: always


  juegos-server:
    build:
      context: ./juegos-server
    container_name: juegos-server
    ports:
      - "9094:9094"
    networks:
      - kala-network
    depends_on:
      - kafka
    environment:
      - PORT=9094
      - DB_HOST=mysql
      - DB_USER=root
      - DB_PASSWORD=admin
      - DB_NAME=kala
      - DB_PORT=3306
      - KAFKA_BROKERS=kafka:8088
      - KAFKA_TOPIC=juegos
      - KAFKA_GROUP=unity-game-router

networks:
  kala-network:
    driver: bridge
    attachable: true

volumes:
  mysql_data:
